#!/usr/bin/env bash
set -euo pipefail

scanDir() {
	declare -A objs
	for f in "$1"/*; do
		n=$(basename "$f")
		if [[ -d "$f" ]]; then
			obj=$(scanDir "$f")
			objs["${n}/"]="$obj"
		elif [[ -f "$f" ]]; then
			obj=$(jq --null-input \
				--argjson size "$(stat -c%s "$f")" \
				'{ $size }')
			objs["$n"]="$obj"
		else
			echo "Skipping $f since it's neither a file nor a directory" >&2
		fi
	done
	jsonobj objs
}

basename() {
	echo "${1##*/}"
}

# jsonobj varname
jsonobj() {
	declare -n obj=$1
	if [[ "${!obj[@]}" == "" ]]; then
		echo "{}"
		return
	fi

	args=()
	keys=()

	i=0
	for k in "${!obj[@]}"; do
		v="${obj[$k]}"
		args+=(--argjson "v$i" "$v")
		keys+=("\"$k\": \$v$i")
		i=$((i + 1))
	done

	jq --null-input "${args[@]}" "{ $(printf "%s, " "${keys[@]}") }"
}

main() {
	if [[ $# -ne 1 ]]; then
		echo "Usage: jsonfs <path>"
		exit 1
	fi

	dir="$1"
	if [[ "$dir" == "" ]]; then
		dir="."
	fi
	
	shopt -s dotglob
	tree=$(scanDir "$dir")

	jq --null-input \
		--arg base "$dir" \
		--argjson tree "$tree" \
		'{ $base, $tree }'
}

main "$@"
